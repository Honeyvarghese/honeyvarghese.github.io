{"name":"Automated Modelling of Self-Organization  in Artiﬁcial Tissue Simulators using Genetic Algorithm.","tagline":"Honey Varghese, Intelligent Systems Project","body":"Abstract— Simulating multi-cellular systems that models the self organization of initial random distribution of cells to regular cellular networks can be very useful in the ﬁeld of bio-engineering and medical applications. These models incorporate a set of parameters that represent the physical and chemical properties of the biological system.These parameters are used to deﬁne the components of the models that when simulated reproduce the behavior of the biological system. Genetic Algorithm can be used to search for those parameters that contribute to the self organization capability of the system. Set Complexity Algorithm is used for the measuring the regularity of the resulting cellular pattern to determine the ﬁtness of the parameters set derived by the Genetic Algorithm. \r\n\r\n##Aim of the Project:\r\n\r\nSimulation of small set of biologically plausible cell behaviors that can reproduce the initial self-organization of endothelial cells (the cells lining the inner walls of blood vessels).\r\n\r\n![](https://cloud.githubusercontent.com/assets/15885993/11707192/34fdde78-9ebe-11e5-8f8e-050b50b95320.PNG)\r\n\r\n##How is it useful?\r\n\r\nA better understanding of the mechanisms by which endothelial cells organize into blood vessels is crucial if we need to enhance or suppress blood vessel growth under pathological conditions, including diabetes, wound healing, and tumor growth. \r\n\r\n##Story behind self-organization..\r\n\r\nSelf-organization is a process where some form of overall order or coordination arises out of the local interactions between smaller component parts of an initially disordered system.\r\n\r\nIf we look around we can see self organization in physical, chemical,biological and cognitive systems.\r\nSelf-organization of fish in the ocean(picture below) is a very good example.\r\n![](https://cloud.githubusercontent.com/assets/15885993/11676541/6ea3eab0-9df0-11e5-971b-0b7eb98823bb.jpg)\r\n\r\nAnd there is a certain type of energy flow that has self-organized into life.  Each cell within our bodies is a self-organized mass of swirling energy that maintains itself using a natural form of intelligence known as animate intelligence.  And each one of those billions of cells connects with others, to form organs, blood flow, a nervous system, and all the other miraculous complexities that coalesce to make you and me into the mind/body organism known as a human being.\r\n\r\n##Project Procedure and Implementation\r\n\r\nA search engine based on genetic algorithm is used to derive the value of cell properties(parameters) that will result in the self-organization of cells when simulated.\r\n\r\nThe picture shown below describes the how the search engine works.\r\n\r\n![](https://cloud.githubusercontent.com/assets/15885993/11704526/ba526f1c-9ea5-11e5-9c83-e42b5de1d85c.png)\r\n\r\n#Implementation details of the engine:\r\n\r\n#Simulator:IDynomics\r\n\r\nThe iDynoMiCS software simulates the growth of microbial communities. iDynoMiCS is written in Java, and uses XML protocol files that allow one to specify easily many different types of simulations. iDynoMiCS writes plain-text XML files as output, and these may be processed using any number of software tools (though we provide some general post-processing routines that run in Matlab and R). In addition to XML files, iDynoMiCS also writes files for POV-Ray, which is used to render 3-D images of the simulation.\r\n\r\n#XML Files:\r\n\r\nThese are protocol files that define the cell properties(parameters). iDynomics take this protocol files as input and simulate cells that have the property described in the property file.\r\n\r\n#Pov ray Files and converter\r\n\r\niDynomics output files of the type POV-Ray. Java code can be used to execute these files in POV-ray software and it will produce the png Images. These images describes the growth pattern of the cells at timed interval.\r\n\r\n#Image processing:\r\n\r\nThis module performs the cleaning and smoothing of the images.\r\n\r\n\r\n\r\n\r\n\r\n\r\nGenetic Algorithms uses the evolution theory to evolve the fittest chromosomes. Here we express the parameter values of the system as genes. The fittest chromosome is the one with genes representing the parameter values that give the best result.Thus the simulation of system with those parameters will result in the self organisation of the cells.\r\n\r\nHere the interesting part is the analysis of the result to determine the best chromosome. In other words we need to determine weather the random cells are self organized. Idea here is to find the Set Complexity of the images produced by the simulation of cells using those parameter values. The better organised cell patterns will have better Set Complexity.\r\n\r\nSee the below graph which represents  the change in Set Complexity as the system proceeds from a random state to an organised form\r\n\r\n![](https://cloud.githubusercontent.com/assets/15885993/11384214/4132c6e4-92cb-11e5-87f3-9203c6a52f4c.PNG)\r\n\r\nResults:\r\n\r\nUsing genetic algorithm I tried to change parameters muMax and chemotatic strength and measured the Set Complexity as the fitness function to arrive at the results. Shown below is the results I got.\r\n\r\n![](https://cloud.githubusercontent.com/assets/15885993/11384658/d9f60d70-92ce-11e5-9a87-40eab9acbfb4.PNG)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}